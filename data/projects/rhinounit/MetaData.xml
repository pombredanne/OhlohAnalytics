<?xml version="1.0" encoding="UTF-8"?>
<response>
  <status>success</status>
  <result>
    <project>
      <id>64674</id>
      <name>rhinounit</name>
      <url>http://www.ohloh.net/p/rhinounit.xml</url>
      <html_url>http://www.ohloh.net/p/rhinounit</html_url>
      <created_at>2008-12-18T13:18:44Z</created_at>
      <updated_at>2013-06-30T08:41:30Z</updated_at>
      <description>This works similarly to other nUnit testing frameworks, though somewhat customized for javascript.  It is exceedingly small, but also surprisingly powerful. 

Go to HowToWriteAndRunTests to learn how to use this framework. 

Ant Based Javascript Testing FrameworkIn its original form RhinoUnit is run from an ANT scriptdef task using the Rhino engine - and uses all the helpful things that ANT provides for that.  It is intended, however, that in the future the framework can be reused in other forms. 

Unit Testing JavascriptIt will do all the normal tests  

string and object comparisons regexp comparisons collection comparisons (contains, containsExactly, etc) 

And does them in a more natural form.  For example assert.that(&quot;string&quot;, not(matches(/somethingelse/))); checks that the string &quot;string&quot; doesn't match the regular expression /somethingelse/. 

Advanced TestsRhinoUnit provides some more advanced tests.  You can 

ensure that a function has been called (by wrapping it with assert.mustCall(), or using an assert.functionThatMustBeCalled()).  See AssertMustCall ensure that an exception is thrown (using shouldThrowException(...) ensure that the global namespace isn't polluted by poor variable scoping See APIDescription for a list of all assertions and functions that are available. 

Setup NestingYou can use the 'when' construct to nest setup functions to give more obvious context to your tests.  This is like 'chaining' your setUp functions, and means you can reduce the amount of repetition at the top of your tests.  See SetupNesting 

JSLint IntegrationJSLint has been included to ensure that your Javascript files follow (Douglas Crockford's) best practices.  To run the lint js, John Snyder's ant task has also been included. 

The original JSLint can be found at 

http://www.jslint.com/ 

and the original Ant script can be found at 

http://dev2dev.bea.com/blog/jsnyders/archive/2007/11/using_jslint_from_ant.html 

Comparisons with other Javascript Testing FrameworksRhinoUnit vs JSUnit.net</description>
      <homepage_url>http://code.google.com/p/rhinounit</homepage_url>
      <download_url></download_url>
      <url_name>rhinounit</url_name>
      <medium_logo_url>no_logo.png</medium_logo_url>
      <small_logo_url>no_logo_32.png</small_logo_url>
      <user_count>2</user_count>
      <average_rating>4.0</average_rating>
      <rating_count>1</rating_count>
      <review_count>0</review_count>
      <analysis_id>14477736</analysis_id>
      <tags>
        <tag>java</tag>
        <tag>rhino</tag>
        <tag>rhinounit</tag>
        <tag>testing</tag>
        <tag>nunit</tag>
        <tag>ant</tag>
        <tag>javascript</tag>
        <tag>tdd</tag>
      </tags>
      <analysis>
        <id>14477736</id>
        <url>http://www.ohloh.net/analyses/14477736.xml</url>
        <project_id>64674</project_id>
        <updated_at>2013-07-11T18:33:03Z</updated_at>
        <logged_at>2013-07-11T18:33:00Z</logged_at>
        <min_month>2008-04-01T00:00:00Z</min_month>
        <max_month>2008-09-01T00:00:00Z</max_month>
        <twelve_month_contributor_count>0</twelve_month_contributor_count>
        <total_code_lines>4726</total_code_lines>
        <factoids>
          <factoid type="FactoidAgeYoung">
Short source control history          </factoid>
          <factoid type="FactoidActivityStable">
Stable Y-O-Y development activity          </factoid>
          <factoid type="FactoidCommentsVeryLow">
Very few source code comments          </factoid>
          <factoid type="FactoidTeamSizeZero">
No recent development activity          </factoid>
        </factoids>
        <languages graph_url="http://www.ohloh.net/p/rhinounit/analyses/14477736/languages.png">
          <language color="A4007E" percentage="98" id="6">
JavaScript          </language>
          <language color="000000" percentage="2" id="">
3 Other          </language>
        </languages>
        <main_language_id>6</main_language_id>
        <main_language_name>JavaScript</main_language_name>
      </analysis>
      <licenses>
        <license>
          <name>bsd</name>
          <nice_name>BSD 4-clause (University of California-Specific)</nice_name>
        </license>
      </licenses>
    </project>
  </result>
</response>
