<?xml version="1.0" encoding="UTF-8"?>
<response>
  <status>success</status>
  <result>
    <project>
      <id>122927</id>
      <name>svnplot</name>
      <url>http://www.ohloh.net/p/svnplot.xml</url>
      <html_url>http://www.ohloh.net/p/svnplot</html_url>
      <created_at>2009-01-02T22:14:13Z</created_at>
      <updated_at>2013-07-07T03:24:41Z</updated_at>
      <description>This project creates various types of statistics and graphs from subversion repository log data.News/UpdatesNew version 0.6 available (28 Mar 2010) 

Many bug fixes related to line count computation when folders are deleted or renamed. (Thanks to Cyber Sinh for detailed bug reports and testing). New svnplot-js.py for JavaScript canvas based charts using jqPlot library. 

New Version 0.5.14 Available (4 Feb 2010) - detection of binary files based on list of commonly used binary files extension. Improvements in calculating the diffs for large repositories where you can access repository as 'file://' repository.  

DO NOT USE 0.5.13. Version 0.5.13 has a bug in the linecount computations. If you are using 0.5.13, please discard the repository stats database and regenerate it again. 



Steps to generate these statistics : 

subversion log information is first converted into a sqlite database. then using sql queries various stats are generated these stats are converted into graphs using the matplotlib package 

The various graphs generated are inspired by the graphs generated using StatSVN/StatCVS.  

Currently following statistics and graphs are generated 

General Statistics Revision count Author count File Count Head revision number Top 10 Hot List Top 10 Active Authors Top 10 Active Files LoC graphs total loc line graph (loc vs dates) average file size vs date line graph Contributed lines of code line graph (loc vs dates). Using different colour line for each developer Loc and Churn graph (loc vs date, churn vs date)- Churn is number of lines touched (i.e. lines added + lines deleted + lines modified) File Count graphs file count vs dates line graph file type vs number of files horizontal bar chart Directory size graphs directory size vs date line graph. Using different coloured lines for each directory directory size pie chart (latest status)  Directory file count pie char(latest status)  

Commit Activity Graphs Commit Activity Index  Activity by hour of day bar graph (commits vs hour of day) Activity by day of week bar graph (commits vs day of week) NEW Author Commit trend history (histogram of time between consecutive commits by same author) Author Activity horizontal bar graph (author vs adding+commiting percentage) Commit activity for each developer - scatter plot (hour of day vs date) Others     Tag cloud of words from revision log messages. Tag cloud of author names. These scripts depend on following python packages 

pysvn - Python interface to subversion sqlite3 - Included by default in python distribution matplotlib - python graph library Currently I am experimenting with applying social network analysis to repositories. Check the preliminary results at Social Network Analysis of Rietveld Subversion Repository and Treemap of Commit count vs centrality for Rietveld repository 

I am a novice to python, sqlite and matplotlib. So any suggestions on improvements are welcome.</description>
      <homepage_url>http://code.google.com/p/svnplot</homepage_url>
      <download_url></download_url>
      <url_name>svnplot</url_name>
      <medium_logo_url>no_logo.png</medium_logo_url>
      <small_logo_url>no_logo.png</small_logo_url>
      <user_count>4</user_count>
      <average_rating>4.0</average_rating>
      <rating_count>2</rating_count>
      <review_count>1</review_count>
      <analysis_id>14558824</analysis_id>
      <tags>
        <tag>subversion</tag>
        <tag>visualization</tag>
        <tag>svn</tag>
        <tag>sqlite3</tag>
        <tag>python</tag>
        <tag>matplotlib</tag>
      </tags>
      <analysis>
        <id>14558824</id>
        <url>http://www.ohloh.net/analyses/14558824.xml</url>
        <project_id>122927</project_id>
        <updated_at>2013-07-07T03:24:40Z</updated_at>
        <logged_at>2013-07-07T03:24:08Z</logged_at>
        <min_month>2008-11-01T00:00:00Z</min_month>
        <max_month>2013-07-01T00:00:00Z</max_month>
        <twelve_month_contributor_count>1</twelve_month_contributor_count>
        <total_code_lines>27687</total_code_lines>
        <factoids>
          <factoid type="FactoidActivityIncreasing">
Increasing Y-O-Y development activity          </factoid>
          <factoid type="FactoidAgeOld">
Well-established codebase          </factoid>
          <factoid type="FactoidCommentsHigh">
Well-commented source code          </factoid>
          <factoid type="FactoidTeamSizeOne">
Only a single active developer          </factoid>
        </factoids>
        <languages graph_url="http://www.ohloh.net/p/svnplot/analyses/14558824/languages.png">
          <language color="A4007E" percentage="80" id="6">
JavaScript          </language>
          <language color="4A246B" percentage="16" id="9">
Python          </language>
          <language color="000000" percentage="4" id="">
3 Other          </language>
        </languages>
        <main_language_id>6</main_language_id>
        <main_language_name>JavaScript</main_language_name>
      </analysis>
      <licenses>
        <license>
          <name>bsd</name>
          <nice_name>BSD 4-clause (University of California-Specific)</nice_name>
        </license>
      </licenses>
    </project>
  </result>
</response>
