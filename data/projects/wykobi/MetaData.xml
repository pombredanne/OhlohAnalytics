<?xml version="1.0" encoding="UTF-8"?>
<response>
  <status>success</status>
  <result>
    <project>
      <id>58329</id>
      <name>wykobi</name>
      <url>http://www.ohloh.net/p/wykobi.xml</url>
      <html_url>http://www.ohloh.net/p/wykobi</html_url>
      <created_at>2008-12-17T15:02:22Z</created_at>
      <updated_at>2013-06-27T15:10:16Z</updated_at>
      <description>Wykobi is an efficient, robust and simple to use multi-platform 2D/3D computational geometry library. Wykobi provides a concise, predictable, and deterministic interface for geometric primitives and complex geometric routines using and conforming to the ISO/IEC 14882:2003 C++ language specification. 

The design and structure of Wykobi lends itself to easy and seamless integration into projects of any scale that require a robust yet efficient 2D/3D computational geometry back-end. 

General FeaturesPairwise intersections in 2D/3D between - Rays, Segments, Lines, Planes, Triangles, Quadii, Circles, Spheres, Rectangles, Boxes, Polygons, Cubic and Quadratic beziers Point inclusion test - Triangle, Rectangle, Circle, Quadix, Sphere and Convex\Concave Polygon region, In Circle and In Sphere Closest point from a point on - Segment, Line, Triangle, Quadix, Circle, Sphere and AABB Closest point on a circle/sphere from a 2D/3D segment or line Mirroring 2D/3D (reflection) about an axis or plane - Point, Segment, Line, Triangle, Quadix, circle, Sphere, Polygon Nonsymmetric mirroring 2D/3D (reflection) about an axis or plane - Point, Segment, Line, Triangle, Quadix, Circle, Sphere, Polygon Euclidean, Ley, Manhattan, Chebyshev and inverse Chebyshev pairwise distance - Rays, Segments, Lines, Planes, Triangles, Quadii, Circles, Spheres, Rectangles, Boxes, Cubic and Quadratic beziers Minkowski pairwise sum and differences between - Rays, Segments, Triangles, Quadii, Circles, Spheres, Rectangles, Boxes and Polygons Clipping of segments agains - Rectangles, Triangles, Quadii, Boxes and Circles Area Calculation - Triangle, Quadix, Rectangle, Circle and Polygon Perimeter Calculation - Triangle, Quadix, Rectangle, Circle and Polygon Generate random points within - AABB, Triangle, Quadix, Circle, Pentagon, Hexagon, Heptagon and Octagon Projection along linear path - Point, Segment, Triangle, Quadix, Circle, Sphere and Polygon Axis aligned bounding boxes - Segments, Triangles, Quadii, Circles, Sphere and polygons Centering of 2D geometric primitives at a specified location 2D/3D Vector addition, subtraction, normalization, magnitude, dot product, cross product calculation 2D/3D Rotations, fast rotations, translations, scaling and shear Point of reflection Quadratic and Cubic Bezier curve creation (2D/3D) Quadratic and Cubic Bezier curve length calculation Polygon approximation of supported geometrical objects Conversions between Cartesian and Barycentric coordiante systems Orientation, Collinear, Coplanar Perpendicular and Parallel primitives Vertex and relative Cartesian angle calculation AlgorithmsConvex Hull - Graham scan, Jarvis march, Melkman Minimum Bounding Ball - Randomized, Ritter and naive Polygon Clipping - Sutherland Hodgman, Polygon re-ording Polygon Triangulation - Ear Clipping Algorithm For Simple Polygons Statistical - Isotropic normalization, Covariance matrix, Eigen values and vectors Group Intersections - Naive pairwise intersections Special triangles, Circles and CentersAnticevian triangle Anticomplementary triangle Antipedal triangle Antipodal points Cevian triangle Circle tangent points Circum-center Circum-circle Confined triangle median Contact triangle Cyclocevian conjugate Equilateral triangle Euler Line Excentral triangle Exmedian point External triangle bisector Extouch triangle Feuerbach point and triangle Incentral triangle Incenter Inscribed circle Inner and outer napoleon triangles Inner and outer vecten vecten triangles Inverse Point Inverse Circle and Sphere Isogonal conjugate Isosceles triangle Medial triangle Morley triangle Orthocenter Orthic triangle Pedal trianglepoint Perspectrix between 2D/3D triangles Symmedial triangle Symmedian point Torricelli point Triangle median Triangle symmedian and plenty more... 

Compatible C++ CompilersGCC 4.0+ Intel C++ Compiler 9.0+ Microsoft Visual C++ 8.0+ Comeau C/C++ 4.1+ For more information please visit: http://www.wykobi.com</description>
      <homepage_url>http://code.google.com/p/wykobi</homepage_url>
      <download_url></download_url>
      <url_name>wykobi</url_name>
      <medium_logo_url>no_logo.png</medium_logo_url>
      <small_logo_url>no_logo_32.png</small_logo_url>
      <user_count>2</user_count>
      <average_rating>5.0</average_rating>
      <rating_count>2</rating_count>
      <review_count>0</review_count>
      <analysis_id>14434058</analysis_id>
      <tags>
        <tag>geometry</tag>
        <tag>transformation</tag>
        <tag>computational</tag>
        <tag>cplusplus</tag>
        <tag>spline</tag>
        <tag>convex</tag>
        <tag>bezier</tag>
        <tag>mathematic</tag>
        <tag>triangulation</tag>
        <tag>physics</tag>
        <tag>polygon</tag>
        <tag>3d</tag>
        <tag>distance</tag>
        <tag>partow</tag>
        <tag>intersection</tag>
        <tag>graphics</tag>
      </tags>
      <analysis>
        <id>14434058</id>
        <url>http://www.ohloh.net/analyses/14434058.xml</url>
        <project_id>58329</project_id>
        <updated_at>2013-07-14T19:46:42Z</updated_at>
        <logged_at>2013-07-14T19:46:39Z</logged_at>
        <min_month>2006-07-01T00:00:00Z</min_month>
        <max_month>2010-05-01T00:00:00Z</max_month>
        <twelve_month_contributor_count>0</twelve_month_contributor_count>
        <total_code_lines>5882</total_code_lines>
        <factoids>
          <factoid type="FactoidAgeOld">
Well-established codebase          </factoid>
          <factoid type="FactoidActivityStable">
Stable Y-O-Y development activity          </factoid>
          <factoid type="FactoidCommentsVeryLow">
Very few source code comments          </factoid>
          <factoid type="FactoidTeamSizeZero">
No recent development activity          </factoid>
        </factoids>
        <languages graph_url="http://www.ohloh.net/p/wykobi/analyses/14434058/languages.png">
          <language color="F35F1F" percentage="99" id="44">
C++          </language>
          <language color="EEE" percentage="1" id="52">
Make          </language>
        </languages>
        <main_language_id>44</main_language_id>
        <main_language_name>C++</main_language_name>
      </analysis>
      <licenses>
        <license>
          <name>gpl</name>
          <nice_name>GNU General Public License v2.0 or later</nice_name>
        </license>
      </licenses>
    </project>
  </result>
</response>
